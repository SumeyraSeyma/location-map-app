services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    env_file:
      - ./backend/.env
    environment:
      - PORT=5000
    volumes:
      - ./backend:/backend
    command: npm run dev
    networks:
      - app-network
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  frontend:
    build:
      context: ./frontend/map-app
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/frontend
    command: npm start
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network
    environment:
      - CHOKIDAR_USEPOLLING=true

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=map-app
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/27017"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  mongodb-data:

networks:
  app-network:
    driver: bridge